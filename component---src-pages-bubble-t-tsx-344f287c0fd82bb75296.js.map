{"version":3,"sources":["webpack:///./src/pages/bubble-t.tsx","webpack:///./src/templates/style.ts"],"names":["Flex","styled","div","Button","button","BubbleTheoryPage","useState","displayImage","setDisplayImage","data","useStaticQuery","fixed","file","childImageSharp","alt","onClick","old","Wrapper","ButtonNext","motion","ButtonReset"],"mappings":"6FAAA,qGAOMA,EAAOC,IAAOC,IAAV,iEAAGD,CAAH,yHAUJE,EAASF,IAAOG,OAAV,mEAAGH,CAAH,uPAyEGI,UAnDe,WAAM,MACMC,oBAAS,GAA1CC,EAD2B,KACbC,EADa,KAE5BC,EAAOC,YAAe,cAY5B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACV,EAAD,KACE,6BACE,kEACCO,EACC,kBAAC,IAAD,CACEI,MAAOF,EAAKG,KAAKC,gBAAgBF,MACjCG,IAAI,yBAGN,oCACE,4GAIA,6BACA,6BACA,gQAUR,kBAACX,EAAD,CAAQY,QAAS,kBAAMP,GAAgB,SAAAQ,GAAG,OAAKA,OAC7C,2BAAIT,EAAe,cAAgB,sB,kCCnF7C,kIAGaU,EAAUhB,IAAOC,IAAV,iEAAGD,CAAH,mGAQPiB,EAAajB,YAAOkB,IAAOf,QAAjB,oEAAGH,CAAH,iRA4BVmB,EAAcnB,YAAOkB,IAAOf,QAAjB,qEAAGH,CAAH","file":"component---src-pages-bubble-t-tsx-344f287c0fd82bb75296.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\r\nimport React, { useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport Img from \"gatsby-image\"\r\nimport { Wrapper } from \"../templates/style\"\r\nimport { Layout } from \"../compontents/Layout\"\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 70%;\r\n  height: 100%;\r\n  margin-bottom: 300px;\r\n  text-align: center;\r\n`\r\n\r\nconst Button = styled.button`\r\n  max-width: 125px;\r\n  max-height: 75px;\r\n\r\n  min-width: 80px;\r\n  width: 10vw;\r\n  min-height: 50px;\r\n  height: 7vw;\r\n\r\n  background: #ffffff;\r\n  box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 42px;\r\n  outline: none;\r\n  border: none;\r\n  position: absolute;\r\n  bottom: 40px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst BubbleTheoryPage: any = () => {\r\n  const [displayImage, setDisplayImage] = useState(false)\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      file(relativePath: { eq: \"images/bubble-sort.PNG\" }) {\r\n        childImageSharp {\r\n          fixed {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <Flex>\r\n          <div>\r\n            <h1>Bubble sort (Sortowanie bąbelkowe)</h1>\r\n            {displayImage ? (\r\n              <Img\r\n                fixed={data.file.childImageSharp.fixed}\r\n                alt=\"Sortowanie bąbelkowe\"\r\n              />\r\n            ) : (\r\n              <>\r\n                <span>\r\n                  Sortowanie bąbelkowe jest o złożoności czasowej O(n^2) i\r\n                  pamięciowej O(1).\r\n                </span>\r\n                <br />\r\n                <br />\r\n                <span>\r\n                  Polega na porównywaniu dwóch sąsiednich elementów i zamianie\r\n                  ich kolejności, jeżeli następny element tablicy jest większy\r\n                  od aktualnego. Sortowanie kończy się, gdy podczas kolejnego\r\n                  przejścia nie dokonano żadnej zmiany.\r\n                </span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Flex>\r\n        <Button onClick={() => setDisplayImage(old => !old)}>\r\n          <b>{displayImage ? \"Pokaż treść\" : \"Pokaż zdjęcie\"}</b>\r\n        </Button>\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BubbleTheoryPage\r\n","import { motion } from \"framer-motion\"\r\nimport styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  height: 100%;\r\n`\r\n\r\nexport const ButtonNext = styled(motion.button)`\r\n  max-width: 125px;\r\n  max-height: 75px;\r\n\r\n  min-width: 80px;\r\n  width: 10vw;\r\n  min-height: 50px;\r\n  height: 7vw;\r\n  \r\n\r\n  svg {\r\n    width: 70%;\r\n    height: 70%;\r\n  }\r\n\r\n  background: #ffffff;\r\n  box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 42px;\r\n  outline: none;\r\n  border: none;\r\n  position: absolute;\r\n  bottom: 20px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const ButtonReset = styled(motion.button)`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n  @media only screen and (max-width: 980px) {\r\n    top: 20px;\r\n    right:20px;\r\n  }\r\n\r\n\r\n  max-width: 75px;\r\n  max-height: 75px;\r\n\r\n  min-width: 50px;\r\n  width: 10vw;\r\n  min-height: 50px;\r\n  height: 10vw;\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  background: #ffffff;\r\n  box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.25);\r\n  border-radius: 42px;\r\n  outline: none;\r\n  border: none;\r\n  position: absolute;\r\n  bottom: 20px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n"],"sourceRoot":""}