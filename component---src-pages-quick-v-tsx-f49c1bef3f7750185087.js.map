{"version":3,"sources":["webpack:///./src/pages/quick-v.tsx"],"names":["TextHolder","styled","div","Separator","BoxHolder","props","isSmaller","width","height","fontSize","theme","fontSizes","breakpoints","generateArr","num","initIndex","Array","from","length","id","value","Math","floor","random","initPivot","QuickSortPage","useState","isEnd","setIsEnd","divide","setDivide","step","setStep","pivotIter","setPivotIter","animationRef","React","useRef","pivot","setPivot","numArr","setNumArr","initArr","toSortArr","setToSortArr","middle","data","useStaticQuery","sortArr","indexOfArr","smaller","larger","cpyOfArrToRead","slice","tempPivot","index","push","old","handleIsActive","TOTAL","useEffect","current","anime","targets","translateY","el","window","innerHeight","getBoundingClientRect","y","translateX","sortedArr","map","it","sort","a","b","innerHTML","currentX","x","innerWidth","findIndex","Number","loop","direction","easing","onClick","reverse","svg","viewBox","fill","xmlns","whileHover","rotate","transition","ease","duration","d","allQuickJson","nodes","text","row","rowIndex","key","col","colIndex","className","isActive","forEach","play"],"mappings":"oPAWMA,EAAaC,IAAOC,IAAV,0EAAGD,CAAH,sCAKVE,EAAYF,IAAOC,IAAV,yEAAGD,CAAH,8CAMTG,EAAYH,IAAOC,IAAV,yEAAGD,CAAH,mMAUP,SAAAI,GACA,GAAIA,EAAMC,UACR,MAAO,CACLC,MAAO,OACPC,OAAQ,OACRC,SAAUC,IAAMC,UAAU,GAAK,SAMFD,IAAME,YAAY,GAGtCF,IAAMC,UAAU,IAa/BE,EAAc,SAACC,GACnB,IAAIC,EAAY,EAChB,OAAOC,MAAMC,KAAK,CAAEC,OAJR,IAIyB,WACnC,MAAO,CACLC,GAAIJ,IACJK,MAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,eAKvBC,EAAY,CAAC,CAACH,KAAKC,MAZX,IAY0B,GAAI,GAAI,GAAI,IAuRrCG,UArRmC,WAAM,MAC5BC,oBAAS,GAA5BC,EAD+C,KACxCC,EADwC,OAE1BF,mBAAS,GAA9BG,EAF+C,KAEvCC,EAFuC,OAG9BJ,mBAAS,GAA1BK,EAH+C,KAGzCC,EAHyC,OAIpBN,mBAAS,GAApCO,EAJ+C,KAIpCC,EAJoC,KAKhDC,EAAeC,IAAMC,OAAO,MALoB,EAM5BX,mBAAqBF,GAAxCc,EAN+C,KAMxCC,EANwC,OAO1Bb,mBAAsBb,KAA3C2B,EAP+C,KAOvCC,EAPuC,KAShDC,EAAU,CAEd,CAACF,GAID,CAAC,GAAI,IACL,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE7B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7D,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAnBT,EAsBpBd,mBAAoBgB,GAA/CC,EAtB+C,KAsBpCC,EAtBoC,KAwBhDC,EAASxB,KAAKC,MAAMkB,EAAOtB,OAAS,GAEpC4B,EAAOC,YAAe,aAiGtBC,EAAU,SAACC,GAOf,IANA,IAAIC,EAAuB,GACvBC,EAAsB,GAEpBC,EAAiBT,EAAUd,GAAQoB,GAAYI,MAAM,GACrDC,EAAYF,EAAelC,OAAS,EAEjCqC,EAAQ,EAAGA,EAAQH,EAAelC,OAAQqC,IAC7CA,IAAUD,IAEVF,EAAeG,GAAOnC,OAASgC,EAAeE,GAAWlC,MAC3D8B,EAAQM,KAAKJ,EAAeG,IAE5BJ,EAAOK,KAAKJ,EAAeG,KAK/BX,GAAa,SAAAa,GAQX,OAPAA,EAAI5B,GAAQoB,GAAZ,UACKC,EADL,CAEEE,EAAeE,IACZH,GAELM,EAAI5B,EAAS,GAAGoB,EAAaA,GAA7B,UAA+CC,GAC/CO,EAAI5B,EAAS,GAAGoB,EAAaA,EAAa,GAA1C,UAAmDE,GAC5CM,MAILC,EAAiB,SAACH,EAAejB,GACrC,OAAa,IAATP,EACe4B,IAAVJ,EAGLxB,GAAQ,GACHwB,IAAUjB,GAOrBsB,qBAAU,WApLE,IAqLN3B,GAAwBN,IAC1BC,GAAS,GACTI,EAAQ,GAERG,EAAa0B,QAAUC,YAAM,CAC3BC,QAAS,SACTC,WAAY,SAAUC,GAKpB,OAFEC,OAAOC,YAFM,IAEiBF,EAAGG,wBAAwBC,GAI7DC,WAAY,SAAUL,GACpB,IAAMM,EAAY/B,EAAOgC,KAAI,SAAAC,GAAE,OAAIA,EAAGrD,SAAOsD,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAC1DxD,EAAgB6C,EAAGY,UACnBC,EAAWb,EAAGG,wBAAwBW,EAG5C,OAFqBb,OAAOc,WAAa,EAAIF,EAI3C,IACkD,IAAlDP,EAAUU,WAAU,SAAAR,GAAE,OAAIA,IAAOS,OAAO9D,OAG5C+D,MAAM,EACNC,UAAW,YACXC,OAAQ,qBAGX,CAACpD,IAaJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaqD,QAdC,WAClB1D,GAAS,GACTE,EAAU,GACVE,EAAQ,GACRE,EAAa,GACbK,EAASf,GACToB,EAAaF,GACbD,EAAU5B,MACVsB,aAAA,EAAAA,EAAc0B,UAAW1B,EAAa0B,QAAQ0B,YAOxC,kBAAC,IAAOC,IAAR,CACEjF,MAAM,KACNC,OAAO,KACPiF,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNC,WAAY,CAAEC,OAAQ,KACtBC,WAAY,CAAEC,KAAM,UAAWC,SAAU,KAEzC,0BACEN,KAAK,QACLO,EAAE,+wBAIR,kBAACjG,EAAD,KACE,gCAAM8C,EAAKoD,aAAaC,MAAMpE,GAAMqE,KAApC,MAGDzD,EAAU6B,KAAI,SAAC6B,EAAKC,GAAN,OACb,kBAAClG,EAAD,CAAWmG,IAAKD,EAAUhG,UAAWuB,EAASyE,GAAY3E,GACvD0E,EAAI7B,KAAI,SAACgC,EAAKC,GAAN,OACP,kBAAC,IAAD,CAAUF,IAAKE,GACZD,EAAIhC,KAAI,WAAgBjB,GAAhB,QAAGpC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACP,kBAAC,IAAD,CACEmF,IAAKpF,EACLA,GAAImF,EAAW,IAAMG,EAAW,IAAMlD,EACtCmD,UACEhD,EAAevC,EAAImB,SAAL,UAAKA,EAAQgE,UAAb,aAAK,EAAoBG,KACvC,QAEFE,SAAUjD,EAAevC,EAAImB,SAAL,UAAKA,EAAQgE,UAAb,aAAK,EAAoBG,KAEhDrF,MAGJoF,EAAItF,OAAS,GAAK,kBAACf,EAAD,cAM3B,kBAAC,IAAD,CAAYmF,QA3NmB,WACnC,IAAI3D,EAAJ,CAMA,GAAa,IAATI,EAgBF,OAfAa,GAAa,SAAAa,GAAO,MACmC,CACnDA,EAAI,GAAG,GAAGjB,EAAOtB,OAAS,GAC1BuC,EAAI,GAAG,GAAGZ,IAGZ,OALEY,EAAI,GAAG,GAAGZ,GADM,KACGY,EAAI,GAAG,GAAGjB,EAAOtB,OAAS,GAD7B,KAMXuC,KAGTlB,GAAS,SAAAkB,GAEP,OADAA,EAAI,GAAG,GAAKd,EAAU,GAAG,GAAGE,GAAQ1B,GAC7BsC,UAGTzB,EAAQ,GAIV,GAAa,IAATD,EAAY,CAOd,IANA,IAAImB,EAAuB,GACvBC,EAAsB,GACtBG,EAAYT,EAEVO,EAAiBT,EAAU,GAAG,GAAGU,MAAM,GAEpCE,EAAQ,EAAGA,EAAQf,EAAOtB,OAAQqC,IACrCA,IAAUD,IAEVF,EAAeG,GAAOnC,OAASgC,EAAeE,GAAWlC,MAC3D8B,EAAQM,KAAKJ,EAAeG,IAE5BJ,EAAOK,KAAKJ,EAAeG,KAc/B,OATAX,GAAa,SAAAa,GAIX,OAHAA,EAAI,GAAG,GAAP,UAAgBP,EAAhB,CAAyBE,EAAeE,IAAeH,GACvDM,EAAI,GAAG,GAAP,UAAgBP,GAChBO,EAAI,GAAG,GAAP,UAAgBN,GACTM,KAGT3B,GAAU,SAAA2B,GAAG,OAAIA,EAAM,UACvBzB,EAAQ,GAIV,OAAID,EAAO,EACLA,EAAO,GAAM,GACfY,EAAUd,GAAQ+E,SAAQ,SAACnC,EAAIlB,GACzBkB,EAAGvD,OAAS,IACdqB,GAAS,SAAAkB,GAEP,OADAA,EAAI5B,GAAQ0B,GAASkB,EAAGA,EAAGvD,OAAS,GAAGC,GACvC,YAAWsC,MAEbvB,GAAa,SAAAuB,GAAG,OAAIA,EAAM,cAG9BzB,EAAQ,KAGRW,EAAUd,GAAQ+E,SAAQ,SAACnC,EAAIlB,GACzBkB,EAAGvD,OAAS,GACd8B,EAAQO,MAIZzB,GAAU,SAAA2B,GAAG,OAAIA,EAAM,UAEzBzB,EAAQ,SAtBV,EAtDEG,EAAa0B,QAAQgD,SA0NjB,kBAAC,IAAOrB,IAAR,CACEjF,MAAM,KACNC,OAAO,KACPiF,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNC,WAAY,CAAEb,EAAG,IACjBe,WAAY,CAAEC,KAAM,UAAWC,SAAU,KAEzC,0BACEC,EAAE,gYACFP,KAAK","file":"component---src-pages-quick-v-tsx-f49c1bef3f7750185087.js","sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { theme } from \"../theme\"\r\nimport anime from \"animejs\"\r\nimport { motion } from \"framer-motion\"\r\nimport { Box } from \"../compontents/Box\"\r\nimport FlipMove from \"react-flip-move\"\r\nimport { Wrapper, ButtonNext, ButtonReset } from \"../templates/style\"\r\nimport { Layout } from \"../compontents/Layout\"\r\n\r\nconst TextHolder = styled.div`\r\n  margin-top: 40px;\r\n  max-width: 600px;\r\n`\r\n\r\nconst Separator = styled.div`\r\n  width: 65px;\r\n  height: 65px;\r\n  margin-right: 5px;\r\n`\r\n\r\nconst BoxHolder = styled.div<{ isSmaller: boolean }>`\r\n  margin-top: 0px;\r\n  display: inline-flex;\r\n\r\n  > div {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n\r\n    .box {\r\n      ${props => {\r\n        if (props.isSmaller) {\r\n          return {\r\n            width: \"15px\",\r\n            height: \"15px\",\r\n            fontSize: theme.fontSizes[6] + \"rem\",\r\n          }\r\n        }\r\n      }}\r\n    }\r\n\r\n    @media only screen and (max-width: ${theme.breakpoints[2]}px) {\r\n      margin-top: 0;\r\n      h2 {\r\n        font-size: ${theme.fontSizes[0]}rem !important;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\ntype SortValue = {\r\n  id: number\r\n  value: number\r\n}\r\n\r\nconst TOTAL = 5\r\n\r\nconst generateArr = (num: number) => {\r\n  var initIndex = 0\r\n  return Array.from({ length: TOTAL }, () => {\r\n    return {\r\n      id: initIndex++,\r\n      value: Math.floor(Math.random() * 40),\r\n    }\r\n  })\r\n}\r\n\r\nconst initPivot = [[Math.floor(TOTAL)], [], [], [], []]\r\n\r\nconst QuickSortPage: React.FC<{ path: string }> = () => {\r\n  const [isEnd, setIsEnd] = useState(false)\r\n  const [divide, setDivide] = useState(0)\r\n  const [step, setStep] = useState(0)\r\n  const [pivotIter, setPivotIter] = useState(1)\r\n  const animationRef = React.useRef(null)\r\n  const [pivot, setPivot] = useState<number[][]>(initPivot)\r\n  const [numArr, setNumArr] = useState<SortValue[]>(generateArr(TOTAL))\r\n\r\n  const initArr = [\r\n    // First step, before `divide and conquer` logic\r\n    [numArr],\r\n    // At this moment, there are maxmum 2 possibilites.\r\n    // Previous array will be divided into 1 or 2 pieces\r\n    // depends on extremes of pivot (left, right or in-betweeen)\r\n    [[], []],\r\n    [[], [], [], [], [], [], [], []],\r\n    // Maximum probability for size of 8*2 numbers\r\n    [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n    [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []],\r\n  ]\r\n\r\n  const [toSortArr, setToSortArr] = useState<any[][][]>(initArr)\r\n\r\n  const middle = Math.floor(numArr.length / 2)\r\n\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allQuickJson {\r\n        nodes {\r\n          step\r\n          text\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const handleQuickAlgorithmNextStep = () => {\r\n    if (isEnd) {\r\n      animationRef.current.play()\r\n      return\r\n    }\r\n\r\n    // swap last with middle-one\r\n    if (step === 0) {\r\n      setToSortArr(old => {\r\n        ;[old[0][0][middle], old[0][0][numArr.length - 1]] = [\r\n          old[0][0][numArr.length - 1],\r\n          old[0][0][middle],\r\n        ]\r\n\r\n        return old\r\n      })\r\n\r\n      setPivot(old => {\r\n        old[0][0] = toSortArr[0][0][middle].id\r\n        return old\r\n      })\r\n\r\n      setStep(1)\r\n      return\r\n    }\r\n\r\n    if (step === 1) {\r\n      let smaller: SortValue[] = []\r\n      let larger: SortValue[] = []\r\n      let tempPivot = middle\r\n\r\n      const cpyOfArrToRead = toSortArr[0][0].slice(0)\r\n\r\n      for (let index = 0; index < numArr.length; index++) {\r\n        if (index === tempPivot) continue\r\n\r\n        if (cpyOfArrToRead[index].value <= cpyOfArrToRead[tempPivot].value) {\r\n          smaller.push(cpyOfArrToRead[index])\r\n        } else {\r\n          larger.push(cpyOfArrToRead[index])\r\n        }\r\n      }\r\n\r\n      // divide and conquer\r\n      setToSortArr(old => {\r\n        old[0][0] = [...smaller, cpyOfArrToRead[tempPivot], ...larger]\r\n        old[1][0] = [...smaller]\r\n        old[1][1] = [...larger]\r\n        return old\r\n      })\r\n\r\n      setDivide(old => old + 1)\r\n      setStep(2)\r\n      return\r\n    }\r\n\r\n    if (step > 1) {\r\n      if (step % 2 === 0) {\r\n        toSortArr[divide].forEach((it, index) => {\r\n          if (it.length > 0) {\r\n            setPivot(old => {\r\n              old[divide][index] = it[it.length - 1].id\r\n              return [...old]\r\n            })\r\n            setPivotIter(old => old + 1)\r\n          }\r\n        })\r\n        setStep(3)\r\n        return\r\n      } else {\r\n        toSortArr[divide].forEach((it, index) => {\r\n          if (it.length > 0) {\r\n            sortArr(index)\r\n          }\r\n        })\r\n\r\n        setDivide(old => old + 1)\r\n      }\r\n      setStep(4)\r\n      return\r\n    }\r\n\r\n    // Indexing\r\n    // setStep(old => old + 1)\r\n  }\r\n\r\n  const sortArr = (indexOfArr: number) => {\r\n    let smaller: SortValue[] = []\r\n    let larger: SortValue[] = []\r\n\r\n    const cpyOfArrToRead = toSortArr[divide][indexOfArr].slice(0)\r\n    const tempPivot = cpyOfArrToRead.length - 1\r\n\r\n    for (let index = 0; index < cpyOfArrToRead.length; index++) {\r\n      if (index === tempPivot) continue\r\n\r\n      if (cpyOfArrToRead[index].value <= cpyOfArrToRead[tempPivot].value) {\r\n        smaller.push(cpyOfArrToRead[index])\r\n      } else {\r\n        larger.push(cpyOfArrToRead[index])\r\n      }\r\n    }\r\n\r\n    // divide and conquer\r\n    setToSortArr(old => {\r\n      old[divide][indexOfArr] = [\r\n        ...smaller,\r\n        cpyOfArrToRead[tempPivot],\r\n        ...larger,\r\n      ]\r\n      old[divide + 1][indexOfArr + indexOfArr] = [...smaller]\r\n      old[divide + 1][indexOfArr + indexOfArr + 1] = [...larger]\r\n      return old\r\n    })\r\n  }\r\n\r\n  const handleIsActive = (index: number, pivot: number) => {\r\n    if (step === 0) {\r\n      return index === TOTAL - 1\r\n    }\r\n\r\n    if (step >= 1) {\r\n      return index === pivot\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  // End handler\r\n  useEffect(() => {\r\n    if (pivotIter === TOTAL && !isEnd) {\r\n      setIsEnd(true)\r\n      setStep(5)\r\n\r\n      animationRef.current = anime({\r\n        targets: \".pivot\",\r\n        translateY: function (el) {\r\n          const OFFSET = 260\r\n          const toBottomHeight =\r\n            window.innerHeight - OFFSET - el.getBoundingClientRect().y\r\n\r\n          return toBottomHeight\r\n        },\r\n        translateX: function (el) {\r\n          const sortedArr = numArr.map(it => it.value).sort((a, b) => a - b)\r\n          const value: string = el.innerHTML\r\n          const currentX = el.getBoundingClientRect().x\r\n          const middleBottom = window.innerWidth / 2 - currentX\r\n\r\n          return (\r\n            middleBottom -\r\n            200 +\r\n            sortedArr.findIndex(it => it === Number(value)) * 120\r\n          )\r\n        },\r\n        loop: false,\r\n        direction: \"alternate\",\r\n        easing: \"easeInOutSine\",\r\n      })\r\n    }\r\n  }, [pivotIter])\r\n\r\n  const handleReset = () => {\r\n    setIsEnd(false)\r\n    setDivide(0)\r\n    setStep(0)\r\n    setPivotIter(1)\r\n    setPivot(initPivot)\r\n    setToSortArr(initArr)\r\n    setNumArr(generateArr(TOTAL))\r\n    animationRef?.current && animationRef.current.reverse()\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <ButtonReset onClick={handleReset}>\r\n          <motion.svg\r\n            width=\"70\"\r\n            height=\"70\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            whileHover={{ rotate: 360 }}\r\n            transition={{ ease: \"easeOut\", duration: 0.6 }}\r\n          >\r\n            <path\r\n              fill=\"black\"\r\n              d=\"M3.254,6.572c0.008,0.072,0.048,0.123,0.082,0.187c0.036,0.07,0.06,0.137,0.12,0.187C3.47,6.957,3.47,6.978,3.484,6.988c0.048,0.034,0.108,0.018,0.162,0.035c0.057,0.019,0.1,0.066,0.164,0.066c0.004,0,0.01,0,0.015,0l2.934-0.074c0.317-0.007,0.568-0.271,0.56-0.589C7.311,6.113,7.055,5.865,6.744,5.865c-0.005,0-0.01,0-0.015,0L5.074,5.907c2.146-2.118,5.604-2.634,7.971-1.007c2.775,1.912,3.48,5.726,1.57,8.501c-1.912,2.781-5.729,3.486-8.507,1.572c-0.259-0.18-0.618-0.119-0.799,0.146c-0.18,0.262-0.114,0.621,0.148,0.801c1.254,0.863,2.687,1.279,4.106,1.279c2.313,0,4.591-1.1,6.001-3.146c2.268-3.297,1.432-7.829-1.867-10.101c-2.781-1.913-6.816-1.36-9.351,1.058L4.309,3.567C4.303,3.252,4.036,3.069,3.72,3.007C3.402,3.015,3.151,3.279,3.16,3.597l0.075,2.932C3.234,6.547,3.251,6.556,3.254,6.572z\"\r\n            ></path>\r\n          </motion.svg>\r\n        </ButtonReset>\r\n        <TextHolder>\r\n          <h2> {data.allQuickJson.nodes[step].text} </h2>\r\n        </TextHolder>\r\n\r\n        {toSortArr.map((row, rowIndex) => (\r\n          <BoxHolder key={rowIndex} isSmaller={divide > rowIndex || isEnd}>\r\n            {row.map((col, colIndex) => (\r\n              <FlipMove key={colIndex}>\r\n                {col.map(({ id, value }, index) => (\r\n                  <Box\r\n                    key={id}\r\n                    id={rowIndex + \"-\" + colIndex + \"-\" + index}\r\n                    className={\r\n                      handleIsActive(id, pivot?.[rowIndex]?.[colIndex]) &&\r\n                      \"pivot\"\r\n                    }\r\n                    isActive={handleIsActive(id, pivot?.[rowIndex]?.[colIndex])}\r\n                  >\r\n                    {value}\r\n                  </Box>\r\n                ))}\r\n                {col.length > 0 && <Separator />}\r\n              </FlipMove>\r\n            ))}\r\n          </BoxHolder>\r\n        ))}\r\n\r\n        <ButtonNext onClick={handleQuickAlgorithmNextStep}>\r\n          <motion.svg\r\n            width=\"70\"\r\n            height=\"28\"\r\n            viewBox=\"0 0 81 30\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            whileHover={{ x: 50 }}\r\n            transition={{ ease: \"easeOut\", duration: 0.6 }}\r\n          >\r\n            <path\r\n              d=\"M80.4142 16.4142C81.1953 15.6332 81.1953 14.3668 80.4142 13.5858L67.6863 0.857872C66.9052 0.0768236 65.6389 0.0768234 64.8579 0.857872C64.0768 1.63892 64.0768 2.90525 64.8579 3.6863L76.1716 15L64.8579 26.3137C64.0768 27.0948 64.0768 28.3611 64.8579 29.1421C65.6389 29.9232 66.9052 29.9232 67.6863 29.1421L80.4142 16.4142ZM-2.39029e-07 17L79 17L79 13L2.39029e-07 13L-2.39029e-07 17Z\"\r\n              fill=\"black\"\r\n            />\r\n          </motion.svg>\r\n        </ButtonNext>\r\n      </Wrapper>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default QuickSortPage\r\n"],"sourceRoot":""}